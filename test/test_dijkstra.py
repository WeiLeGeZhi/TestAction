import unittest
from src.dijkstra import dijkstra

class TestDijkstra(unittest.TestCase):
    def test(self):
        graph = {1: [(2, 351), (5, 585), (1, 279)], 2: [(5, 194), (2, 721), (2, 249)], 3: [(5, 935), (1, 566)], 4: [(1, 999)], 5: [(5, 818)]}
        n = 5
        result = dijkstra(graph, 1, n)
        self.assertEqual(result, 545)

        graph = {1: [(1, 46), (4, 611), (6, 276)], 2: [], 3: [], 4: [(10, 559)], 5: [(5, 277)], 6: [], 7: [(3, 910)], 8: [(10, 124)], 9: [(8, 478)], 10: [(8, 679), (6, 707)]}
        n = 10
        result = dijkstra(graph, 1, n)
        self.assertEqual(result, 1170)

        graph = {1: [(15, 176)], 2: [(69, 187)], 3: [(37, 340), (70, 403)], 4: [(54, 107), (32, 482)], 5: [(75, 142)], 6: [(72, 196)], 7: [], 8: [], 9: [], 10: [(59, 143), (52, 812), (37, 97)], 11: [(82, 259), (71, 915)], 12: [], 13: [(27, 4)], 14: [(40, 429), (26, 387)], 15: [(92, 653)], 16: [(64, 653)], 17: [], 18: [(22, 762)], 19: [(39, 307)], 20: [], 21: [(29, 839)], 22: [(10, 25)], 23: [(18, 60)], 24: [], 25: [(44, 977), (30, 922), (11, 684)], 26: [], 27: [], 28: [], 29: [(12, 124), (70, 515)], 30: [(58, 271), (82, 514)], 31: [(100, 71)], 32: [(99, 951), (28, 521)], 33: [], 34: [], 35: [(75, 
118), (72, 285)], 36: [(94, 914)], 37: [], 38: [(4, 775)], 39: [], 40: [], 41: [], 42: [(68, 398), (29, 225)], 43: [(56, 234)], 44: [(100, 769), (83, 624)], 45: [], 46: [(25, 119)], 47: [(15, 688)], 48: [(61, 710)], 49: [], 50: [(51, 25)], 51: [(80, 125), (44, 699)], 52: [(11, 342)], 53: [], 54: [], 55: [(8, 507)], 56: [(71, 53), (56, 57), (96, 929), (15, 983)], 57: [(88, 634), (15, 27)], 
58: [], 59: [], 60: [(51, 353), (11, 107)], 61: [], 62: [(29, 86)], 63: [(31, 662), (77, 976)], 64: [(79, 692), (28, 325)], 65: [(55, 264)], 66: [(44, 841)], 67: [(53, 797), (20, 434)], 68: [], 69: [(50, 694), (75, 156)], 70: [(10, 332), (14, 326)], 71: [(16, 248)], 72: [], 73: [], 74: [(25, 575), (45, 870), (91, 708)], 75: [(70, 694)], 76: [(28, 836), (68, 147), (87, 945)], 77: [], 78: [], 79: [(48, 498)], 80: [], 81: [(80, 990)], 82: [(36, 423), (88, 34)], 83: [(61, 848), (82, 359), 
(33, 892)], 84: [(34, 128), (11, 225)], 85: [(75, 991)], 86: [(76, 860)], 87: [(84, 555), (67, 936), (39, 804)], 88: [], 89: [], 90: [(84, 863)], 91: [], 92: [(51, 293)], 93: [], 94: [(96, 829)], 
95: [], 96: [], 97: [], 98: [(88, 863), (35, 192)], 99: [(14, 557)], 100: [(90, 709)]}
        n = 100
        result = dijkstra(graph, 1, n)
        self.assertEqual(result, 2590)
        
if __name__ == '__main__':
    unittest.main()
